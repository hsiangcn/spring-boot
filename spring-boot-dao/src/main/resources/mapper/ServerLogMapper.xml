<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.free.dao.server.ServerLogMapper" >
  <resultMap id="BaseResultMap" type="com.free.dao.model.ServerLog" >
    <result column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="mobile_imei" property="mobileImei" jdbcType="VARCHAR" />
    <result column="client_ip" property="clientIp" jdbcType="VARCHAR" />
    <result column="server_ip" property="serverIp" jdbcType="VARCHAR" />
    <result column="server_post" property="serverPost" jdbcType="VARCHAR" />
    <result column="request_url" property="requestUrl" jdbcType="VARCHAR" />
    <result column="execute_status" property="executeStatus" jdbcType="VARCHAR" />
    <result column="request_method" property="requestMethod" jdbcType="VARCHAR" />
    <result column="consuming_time" property="consumingTime" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.free.dao.model.ServerLog" extends="BaseResultMap" >
    <result column="request_param" property="requestParam" jdbcType="LONGVARCHAR" />
    <result column="response_body" property="responseBody" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, mobile_imei, client_ip, server_ip, server_post, request_url, request_method, 
    consuming_time, create_time
  </sql>
  <sql id="Blob_Column_List" >
    request_param, response_body
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.free.dao.model.ServerLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from server_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.free.dao.model.ServerLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from server_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.free.dao.model.ServerLogExample" >
    delete from server_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.free.dao.model.ServerLog" >
    insert into server_log (id, user_id, mobile_imei, 
      client_ip, server_ip, server_post, 
      request_url, request_method, consuming_time, 
      create_time, request_param, response_body
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=VARCHAR}, #{mobileImei,jdbcType=VARCHAR}, 
      #{clientIp,jdbcType=VARCHAR}, #{serverIp,jdbcType=VARCHAR}, #{serverPost,jdbcType=VARCHAR}, 
      #{requestUrl,jdbcType=VARCHAR}, #{requestMethod,jdbcType=VARCHAR}, #{consumingTime,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{requestParam,jdbcType=LONGVARCHAR}, #{responseBody,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.free.dao.model.ServerLog" >
    insert into server_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="mobileImei != null" >
        mobile_imei,
      </if>
      <if test="clientIp != null" >
        client_ip,
      </if>
      <if test="serverIp != null" >
        server_ip,
      </if>
      <if test="serverPost != null" >
        server_post,
      </if>
      <if test="requestUrl != null" >
        request_url,
      </if>
      <if test="requestMethod != null" >
        request_method,
      </if>
      <if test="consumingTime != null" >
        consuming_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="requestParam != null" >
        request_param,
      </if>
      <if test="responseBody != null" >
        response_body,
      </if>
      <if test="executeStatus != null" >
        execute_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="mobileImei != null" >
        #{mobileImei,jdbcType=VARCHAR},
      </if>
      <if test="clientIp != null" >
        #{clientIp,jdbcType=VARCHAR},
      </if>
      <if test="serverIp != null" >
        #{serverIp,jdbcType=VARCHAR},
      </if>
      <if test="serverPost != null" >
        #{serverPost,jdbcType=VARCHAR},
      </if>
      <if test="requestUrl != null" >
        #{requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="requestMethod != null" >
        #{requestMethod,jdbcType=VARCHAR},
      </if>
      <if test="consumingTime != null" >
        #{consumingTime,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestParam != null" >
        #{requestParam,jdbcType=LONGVARCHAR},
      </if>
      <if test="responseBody != null" >
        #{responseBody,jdbcType=LONGVARCHAR},
      </if>
      <if test="executeStatus != null" >
        #{executeStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.free.dao.model.ServerLogExample" resultType="java.lang.Integer" >
    select count(*) from server_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update server_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.mobileImei != null" >
        mobile_imei = #{record.mobileImei,jdbcType=VARCHAR},
      </if>
      <if test="record.clientIp != null" >
        client_ip = #{record.clientIp,jdbcType=VARCHAR},
      </if>
      <if test="record.serverIp != null" >
        server_ip = #{record.serverIp,jdbcType=VARCHAR},
      </if>
      <if test="record.serverPost != null" >
        server_post = #{record.serverPost,jdbcType=VARCHAR},
      </if>
      <if test="record.requestUrl != null" >
        request_url = #{record.requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.requestMethod != null" >
        request_method = #{record.requestMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.consumingTime != null" >
        consuming_time = #{record.consumingTime,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.requestParam != null" >
        request_param = #{record.requestParam,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.responseBody != null" >
        response_body = #{record.responseBody,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update server_log
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=VARCHAR},
      mobile_imei = #{record.mobileImei,jdbcType=VARCHAR},
      client_ip = #{record.clientIp,jdbcType=VARCHAR},
      server_ip = #{record.serverIp,jdbcType=VARCHAR},
      server_post = #{record.serverPost,jdbcType=VARCHAR},
      request_url = #{record.requestUrl,jdbcType=VARCHAR},
      request_method = #{record.requestMethod,jdbcType=VARCHAR},
      consuming_time = #{record.consumingTime,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      request_param = #{record.requestParam,jdbcType=LONGVARCHAR},
      response_body = #{record.responseBody,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update server_log
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=VARCHAR},
      mobile_imei = #{record.mobileImei,jdbcType=VARCHAR},
      client_ip = #{record.clientIp,jdbcType=VARCHAR},
      server_ip = #{record.serverIp,jdbcType=VARCHAR},
      server_post = #{record.serverPost,jdbcType=VARCHAR},
      request_url = #{record.requestUrl,jdbcType=VARCHAR},
      request_method = #{record.requestMethod,jdbcType=VARCHAR},
      consuming_time = #{record.consumingTime,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>